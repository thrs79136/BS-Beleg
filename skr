#!/bin/bash

allfiles(){
echo auth-{fohls,ilpro122,ipc88,ipo51}.log{,.{1,{2..4}$1}}
}

#laedt Dateien herunter und entpackt diese ggf.
download(){
   n=0
   for file in `allfiles .gz`; do
      clear
      ((n++))
      echo Downloading file $n/20
	
      wget ilpro122.informatik.htw-dresden.de/logs/${file} 2> /dev/null
      if [ $? -ne 0 ]; then return 1; fi

      unzip=$(echo $file | grep ".gz" | wc -l)
      if [ $unzip -eq 1 ]; then
         echo Unzipping file
         gzip -d $file 2> /dev/null
         if [ $? -ne 0 ]; then return 1; fi
      fi 
   done
}

rmfiles(){
rm *; cd ..; rmdir $1
}

#ein Kommandozeilenparameter
option1(){
   #Pruefung ueber RegEx, ob es sich um eine IP-Adresse handelt
   isIP=$(echo $1 | grep "\<\(\(25[0-5]\|2[0-4][0-9]\|[01]\?[0-9][0-9]\?\)\.\)\{3\}\(25[0-5]\|2[0-4][0-9]\|[01]\?[0-9][0-9]\?\)\>" | wc -l)
   if [ $isIP -ne 1 ]; then
      echo "Invalid IP Address"
      return 1
   fi

   #Das erste sowie letzte Datum jeder Datei werden jeweils in einem String gespeichert 
   mindates=$(for file in `allfiles`; do
   grep -m1 "\(\(Failed password for invalid user\)\|\(Failed password for root\)\).*from $1" $file | cut -c-15
done)
   maxdates=$(for file in `allfiles`; do
   tac $file | grep -m1 "\(\(Failed password for invalid user\)\|\(Failed password for root\)\).*from $1" | cut -c-15
done)

   #Ueberpruefung auf Vorkommen der IP-Adresse
   if [ -z "$mindates" ]; then
      echo "No attacks originated from this IP adress"
      return 1
   fi

   #Daten in den Variablen werden sortiert und das fruehste sowie spaeteste herausgefiltert
   min=$(echo "$mindates" | while read -r line; do
                         date --date="$line" +%s
                      done | sort -n | head -n1)

   max=$(echo "$maxdates" | while read -r line; do
                        date --date="$line" +%s
                     done  | sort -n | tail -n1)

   echo First try: $(date --date=@$min)
   echo Last try: $(date --date=@$max)
}

option2(){
   #Pruefung auf gueltige Parameter
   invalid=0
   if [ "$1" != "ipo51" -a "$1" != "ipc88" -a "$1" != "ilpro122" -a "$1" != "fohls" -a "$1" != "all" ]; then
      echo "First parameter has to be 'ipo51', 'ipc88', 'ilpro122', 'fohls' or 'all'"
      invalid=1
   fi
   if [ "$2" != "root" -a "$2" != "users" -a "$2" != "login" ]; then
      echo "Second parameter has to be 'root', 'users' or 'login'"
      invalid=1
   fi

   if [ $invalid -eq 1 ]; then return 1; fi
   
   clear
   echo Analyzing log files...

   #Zweiter Parameter bestimmt, welche Zeichenketten herausgefiltert werden sollen
   case "$2" in
   "root")
      searchKey="Failed password for root"
      stringNum=4
   ;;
   "users")
      searchKey="Failed password for invalid user"
      stringNum=4
   ;;
   "login")
      searchKey="Failed password for invalid user"
      stringNum=6
   ;;
   esac

   #mehrfaches Vorkommen gleicher IP-Adressen oder Nutzerkennzeichen wird gezaehlt 
   if [ "$1" == "all" ]; then
      var=$(grep "$searchKey"  auth-{fohls,ilpro122,ipc88,ipo51}.log{,.{1,{2..4}}} | rev | cut -f$stringNum -d' ' | rev | sort | uniq -c | sort -n)
   else
      var=$(grep "$searchKey" auth-$1.log{,.{1,{2..4}}} | rev | cut -f$stringNum -d' ' | rev | sort | uniq -c | sort -n)
   fi
   clear
   echo "$var"
}

########
#ANFANG#
########
clear

#prueft gueltige Kmdozeilenparameteranzahl
if [ $# -eq 0 -o $# -gt 2 ]; then
   echo Invalid command line parameter number
   echo -e Option 1: \nFirst parameter: IP Address\n
   echo -e Option 2: \nFirst parameter: 'ipo51', 'ipc88', 'ilpro122', 'fohls' or 'all'\nSecond parameter: 'root', 'user' or 'login'\n
   exit 1
#Ueberprufung auf gueltige IP-Adresse, falls ein Parameter uebergeben wurde
elif [ $# -eq 1 ]; then
   isIP=$(echo $1 | grep "\<\(\(25[0-5]\|2[0-4][0-9]\|[01]\?[0-9][0-9]\?\)\.\)\{3\}\(25[0-5]\|2[0-4][0-9]\|[01]\?[0-9][0-9]\?\)\>" | wc -l)
   if [ $isIP -ne 1 ]; then
      echo "Invalid IP Address"
      exit 1
   fi
#Ueberpruefung auf gueltige Parameter, falls zwei eingegeben wurden
elif [ $# -eq 2 ]; then
   invalid=0
   if [ "$1" != "ipo51" -a "$1" != "ipc88" -a "$1" != "ilpro122" -a "$1" != "fohls" -a "$1" != "all" ];
then
      echo "First parameter has to be 'ipo51', 'ipc88', 'ilpro122', 'fohls' or 'all'"
      invalid=1
   fi
   if [ "$2" != "root" -a "$2" != "users" -a "$2" != "login" ]; then
      echo "Second parameter has to be 'root', 'users' or 'login'"
      invalid=1
   fi
   if [ $invalid -eq 1 ]; then exit 1; fi

else   
#Erstellen eines temporaeren Verzeichnisses
#tempdir=$(mktemp -d logfiles.XXX)
#cd $tempdir
#download
cd files
#!!!nachher wieder loeschen!!!

if [ $# -eq 1 ]; then
   option1 $1
elif [ $# -eq 2 ]; then
   option2 $1 $2
fi
fi

#Loeschen des Verzeichnisses
#rm *; cd .. ; rmdir $tempdir;

exit 0
